{"version":3,"sources":["webpack:///static/4.f2b70f81.chunk.js","webpack:///./catalog/pixel/style/tokens.md?08b5","webpack:///./catalog/pixel/style/tokens.md"],"names":["webpackJsonp","803","module","exports","__webpack_require__","React","createReactClass","PageRenderer","__esModule","default","WrappedPageRenderer","displayName","getInitialState","content","componentWillMount","render","createElement","Object","assign","this","props","state","__catalog_loader__","824"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,EAASC,GCF7B,GAAIC,GAAQ,EAAQ,IAChBC,EAAmB,EAAQ,IAC3BC,EAAe,EAAQ,KAAWA,YAClCA,GAAaC,aACfD,EAAeA,EAAaE,QAE9B,IAAIC,GAAsBJ,GACxBK,YAAa,sBACbC,gBAAiB,WACf,OAAQC,QAAS,EAAQ,OAE3BC,mBAAoB,aAUpBC,OAAQ,WACN,MAAOV,GAAMW,cAAcT,EAAcU,OAAOC,UAAWC,KAAKC,OAAQP,QAASM,KAAKE,MAAMR,aAGhGH,GAAoBY,oBAAqB,EACzCpB,EAAOC,QAAUO,GDUfa,IACA,SAAUrB,EAAQC,GEtCxBD,EAAOC,QAAU","file":"static/4.f2b70f81.chunk.js","sourcesContent":["webpackJsonp([4],{\n\n/***/ 803:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var React = __webpack_require__(15);\n    var createReactClass = __webpack_require__(45);\n    var PageRenderer = __webpack_require__(294).PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: __webpack_require__(824)};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (false) {\n          module.hot.accept(\"!!../../../node_modules/raw-loader/index.js!./tokens.md\", function() {\n            component.setState({\n              content: require(\"!!../../../node_modules/raw-loader/index.js!./tokens.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n/***/ }),\n\n/***/ 824:\n/***/ (function(module, exports) {\n\nmodule.exports = \"## Typography\\n```code|lang-scss,span-4\\n@mixin font size { ... }\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns font-size property with a default value set.</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin font size, xs { ... }\\n```\\n```code|lang-js,span-2\\nmixins.font(mixin, 'size', 'xs');\\n```\\n```html|span-2,no-source,plain,light\\n<div>\\n  Returns font sizing token matching size.\\n  <br><b style=\\\"color:#00529A; font-size:12px; text-transform:uppercase;\\\">xs, s, m, l, xl</b>\\n</div>\\n```\\n\\n```code|lang-scss,span-4\\n@mixin font weight { ... }\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns font-weight property with default value set.</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin font weight, light { ... }\\n```\\n```code|lang-js,span-2\\nmixins.font(mixin, 'weight', 'light');\\n```\\n```html|span-2,no-source,plain,light\\n<div>\\n  Returns font weight token matching specified weight.\\n  <br><b style=\\\"color:#00529A; font-size:12px; text-transform:uppercase;\\\">light, normal, bold</b>\\n</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin font color, saber { ... }\\n```\\n```code|lang-js,span-2\\nmixins.font(mixin, 'color', 'saber');\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns font color token matching specified color name.</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin line 1, flag { ... }\\n```\\n```code|lang-js,span-2\\nmixins.line(mixin, 'line', 1, 'flag');\\n```\\n```html|span-2,no-source,plain,light\\n<div>\\n  Returns font tokens for lines found in the various block implementations.\\n  <br><b style=\\\"color:#00529A; font-size:12px; text-transform:uppercase;\\\">flag, tag</b>\\n  <br><b style=\\\"color:red; font-size:10px;\\\">REFACTORING</b>\\n</div>\\n```\\n\\n## Theming\\n```code|lang-scss,span-2\\n@mixin themes { ... }\\n       themes, flag { ... }\\n```\\n```code|lang-js,span-2\\nmixins.themes(mixin, 'flag');\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns all themes, with ampersand by default, connecting each to surrounding context. If you pass an element tag, it will bind each theme to that element.</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin theme redLeader { ... }\\n             redLeader, flag { ... }\\n```\\n```code|lang-js,span-2\\nmixins.theme(mixin, 'redLeader', 'flag');\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns all themes, with ampersand by default, connecting each to surrounding context. If you pass an element tag, it will bind each theme to that element.</div>\\n```\\n\\n\\n## <Block />\\n```code|lang-scss,span-2\\n@mixin block_col_1 { ... }\\n       block_col_1 s { ... }\\n```\\n```code|lang-js,span-2\\nmixins.block_col_1(mixin, 's');\\n```\\n```html|span-2,no-source,plain,light\\n<div>\\n  Returns Blocks first column tokens. Specify size to avoid generating all sizes.\\n  <br><b style=\\\"color:#00529A; font-size:12px; text-transform:uppercase;\\\">s, m, l</b>\\n</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin block_col_2 { ... }\\n```\\n```code|lang-js,span-2\\nmixins.block_col_2(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns Block's second column tokens.</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin block_col_3 { ... }\\n```\\n```code|lang-js,span-2\\nmixins.block_col_3(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns Block's third column tokens.</div>\\n```\\n\\n\\n## <Page />\\n```code|lang-scss,span-2\\n@mixin page { ... }\\n```\\n```code|lang-js,span-2\\nmixins.page(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns Page's complete token structure. Containers return two wrappers down (with header/body/footer).</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin page_header { ... }\\n```\\n```code|lang-js,span-2\\nmixins.page_header(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns Page's header tokens.</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin page_body { ... }\\n```\\n```code|lang-js,span-2\\nmixins.page_body(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns Page's body tokens.</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin page_footer { ... }\\n```\\n```code|lang-js,span-2\\nmixins.page_footer(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns Page's footer tokens.</div>\\n```\\n\\n\\n## <Drawer />\\n```code|lang-scss,span-2\\n@mixin drawer { ... }\\n```\\n```code|lang-js,span-2\\nmixins.drawer(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns Drawer's complete token structure. Containers return two wrappers down (with header/body/footer).</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin drawer_header { ... }\\n```\\n```code|lang-js,span-2\\nmixins.drawer_header(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>\\n  Returns Drawer's header tokens.\\n  <br><b style=\\\"color:red; font-size:10px;\\\">REFACTORING</b>\\n</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin drawer_footer { ... }\\n```\\n```code|lang-js,span-2\\nmixins.drawer_footer(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>\\n  Returns Drawer's footer tokens.\\n  <br><b style=\\\"color:red; font-size:10px;\\\">REFACTORING</b>\\n</div>\\n```\\n\\n\\n## <Group />\\n```code|lang-scss,span-2\\n@mixin group { ... }\\n```\\n```code|lang-js,span-2\\nmixins.group(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns Group's complete token structure. Containers return two wrappers down (with header/body/footer).</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin group_header { ... }\\n```\\n```code|lang-js,span-2\\nmixins.group_header(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns Groups's header tokens.</div>\\n```\\n\\n\\n## <Button />\\n```code|lang-scss,span-2\\n@mixin button { ... }\\n```\\n```code|lang-js,span-2\\nmixins.button(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns Button's complete token structure. Only applies to the actual HTML button and not wrapper Action.</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin button_primary { ... }\\n```\\n```code|lang-js,span-2\\nmixins.button_primary(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>\\n  Returns primary Button's tokens, including all :states.\\n  <br><b style=\\\"color:red; font-size:10px; text-transform:uppercase\\\">reconsidering</b>\\n</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin button_secondary { ... }\\n```\\n```code|lang-js,span-2\\nmixins.button_secondary(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>\\n  Returns secondary Button's tokens, including all :states.\\n  <br><b style=\\\"color:red; font-size:10px; text-transform:uppercase\\\">reconsidering</b>\\n</div>\\n```\\n\\n\\n## <Action />\\n```code|lang-scss,span-2\\n@mixin action { ... }\\n```\\n```code|lang-js,span-2\\nmixins.action(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>\\n  Returns tokens that establish positioning & display properties.\\n  <br><b style=\\\"color:red; font-size:10px; text-transform:uppercase\\\">refactoring</b>\\n</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin action text { ... }\\n```\\n```code|lang-js,span-2\\nmixins.action(mixin, 'text');\\n```\\n```html|span-2,no-source,plain,light\\n<div>\\n  Poorly relates to Action. Used as text tokenizer.\\n  <br><b style=\\\"color:red; font-size:10px; text-transform:uppercase\\\">refactoring</b>\\n</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin action_link { ... }\\n```\\n```code|lang-js,span-2\\nmixins.action_link(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>\\n  Returns ActionLink's tokens. Refers to proceeding token for text styles.\\n  <br><b style=\\\"color:red; font-size:10px; text-transform:uppercase\\\">refactoring</b>\\n</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin action_button { ... }\\n```\\n```code|lang-js,span-2\\nmixins.action_button(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>\\n  Returns ActionButton's tokens. Refers to action text token for text styles.\\n  <br><b style=\\\"color:red; font-size:10px; text-transform:uppercase\\\">refactoring</b>\\n</div>\\n```\\n\\n\\n## <Flag />\\n```code|lang-scss,span-2\\n@mixin flag { ... }\\n```\\n```code|lang-js,span-2\\nmixins.flag(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns Flag version from bubble config including tokens & full structure.</div>\\n```\\n\\n\\n## <Tag />\\n```code|lang-scss,span-2\\n@mixin tag { ... }\\n```\\n```code|lang-js,span-2\\nmixins.tag(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns Tag version from bubble config including tokens & full structure.</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin bubble tag{ ... }\\n```\\n```code|lang-js,span-2\\nmixins.bubble(mixin, 'tag');\\n```\\n```html|span-2,no-source,plain,light\\n<div>\\n  Returns tokens & structure for Flags and Tags.\\n  <br><b style=\\\"color:red; font-size:10px; text-transform:uppercase\\\">refactoring</b>\\n</div>\\n```\\n\\n\\n## <Wrapper />\\n```code|lang-scss,span-2\\n@mixin wrapper { ... }\\n```\\n```code|lang-js,span-2\\nmixins.wrapper(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns tokens that establish positioning and display properties.</div>\\n```\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/4.f2b70f81.chunk.js","\n    var React = require('react');\n    var createReactClass = require('create-react-class');\n    var PageRenderer = require('catalog').PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: require(\"!!../../../node_modules/raw-loader/index.js!./tokens.md\")};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (module.hot) {\n          module.hot.accept(\"!!../../../node_modules/raw-loader/index.js!./tokens.md\", function() {\n            component.setState({\n              content: require(\"!!../../../node_modules/raw-loader/index.js!./tokens.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./catalog/pixel/style/tokens.md\n// module id = 803\n// module chunks = 4","module.exports = \"## Typography\\n```code|lang-scss,span-4\\n@mixin font size { ... }\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns font-size property with a default value set.</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin font size, xs { ... }\\n```\\n```code|lang-js,span-2\\nmixins.font(mixin, 'size', 'xs');\\n```\\n```html|span-2,no-source,plain,light\\n<div>\\n  Returns font sizing token matching size.\\n  <br><b style=\\\"color:#00529A; font-size:12px; text-transform:uppercase;\\\">xs, s, m, l, xl</b>\\n</div>\\n```\\n\\n```code|lang-scss,span-4\\n@mixin font weight { ... }\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns font-weight property with default value set.</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin font weight, light { ... }\\n```\\n```code|lang-js,span-2\\nmixins.font(mixin, 'weight', 'light');\\n```\\n```html|span-2,no-source,plain,light\\n<div>\\n  Returns font weight token matching specified weight.\\n  <br><b style=\\\"color:#00529A; font-size:12px; text-transform:uppercase;\\\">light, normal, bold</b>\\n</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin font color, saber { ... }\\n```\\n```code|lang-js,span-2\\nmixins.font(mixin, 'color', 'saber');\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns font color token matching specified color name.</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin line 1, flag { ... }\\n```\\n```code|lang-js,span-2\\nmixins.line(mixin, 'line', 1, 'flag');\\n```\\n```html|span-2,no-source,plain,light\\n<div>\\n  Returns font tokens for lines found in the various block implementations.\\n  <br><b style=\\\"color:#00529A; font-size:12px; text-transform:uppercase;\\\">flag, tag</b>\\n  <br><b style=\\\"color:red; font-size:10px;\\\">REFACTORING</b>\\n</div>\\n```\\n\\n## Theming\\n```code|lang-scss,span-2\\n@mixin themes { ... }\\n       themes, flag { ... }\\n```\\n```code|lang-js,span-2\\nmixins.themes(mixin, 'flag');\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns all themes, with ampersand by default, connecting each to surrounding context. If you pass an element tag, it will bind each theme to that element.</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin theme redLeader { ... }\\n             redLeader, flag { ... }\\n```\\n```code|lang-js,span-2\\nmixins.theme(mixin, 'redLeader', 'flag');\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns all themes, with ampersand by default, connecting each to surrounding context. If you pass an element tag, it will bind each theme to that element.</div>\\n```\\n\\n\\n## <Block />\\n```code|lang-scss,span-2\\n@mixin block_col_1 { ... }\\n       block_col_1 s { ... }\\n```\\n```code|lang-js,span-2\\nmixins.block_col_1(mixin, 's');\\n```\\n```html|span-2,no-source,plain,light\\n<div>\\n  Returns Blocks first column tokens. Specify size to avoid generating all sizes.\\n  <br><b style=\\\"color:#00529A; font-size:12px; text-transform:uppercase;\\\">s, m, l</b>\\n</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin block_col_2 { ... }\\n```\\n```code|lang-js,span-2\\nmixins.block_col_2(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns Block's second column tokens.</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin block_col_3 { ... }\\n```\\n```code|lang-js,span-2\\nmixins.block_col_3(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns Block's third column tokens.</div>\\n```\\n\\n\\n## <Page />\\n```code|lang-scss,span-2\\n@mixin page { ... }\\n```\\n```code|lang-js,span-2\\nmixins.page(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns Page's complete token structure. Containers return two wrappers down (with header/body/footer).</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin page_header { ... }\\n```\\n```code|lang-js,span-2\\nmixins.page_header(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns Page's header tokens.</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin page_body { ... }\\n```\\n```code|lang-js,span-2\\nmixins.page_body(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns Page's body tokens.</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin page_footer { ... }\\n```\\n```code|lang-js,span-2\\nmixins.page_footer(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns Page's footer tokens.</div>\\n```\\n\\n\\n## <Drawer />\\n```code|lang-scss,span-2\\n@mixin drawer { ... }\\n```\\n```code|lang-js,span-2\\nmixins.drawer(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns Drawer's complete token structure. Containers return two wrappers down (with header/body/footer).</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin drawer_header { ... }\\n```\\n```code|lang-js,span-2\\nmixins.drawer_header(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>\\n  Returns Drawer's header tokens.\\n  <br><b style=\\\"color:red; font-size:10px;\\\">REFACTORING</b>\\n</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin drawer_footer { ... }\\n```\\n```code|lang-js,span-2\\nmixins.drawer_footer(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>\\n  Returns Drawer's footer tokens.\\n  <br><b style=\\\"color:red; font-size:10px;\\\">REFACTORING</b>\\n</div>\\n```\\n\\n\\n## <Group />\\n```code|lang-scss,span-2\\n@mixin group { ... }\\n```\\n```code|lang-js,span-2\\nmixins.group(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns Group's complete token structure. Containers return two wrappers down (with header/body/footer).</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin group_header { ... }\\n```\\n```code|lang-js,span-2\\nmixins.group_header(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns Groups's header tokens.</div>\\n```\\n\\n\\n## <Button />\\n```code|lang-scss,span-2\\n@mixin button { ... }\\n```\\n```code|lang-js,span-2\\nmixins.button(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns Button's complete token structure. Only applies to the actual HTML button and not wrapper Action.</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin button_primary { ... }\\n```\\n```code|lang-js,span-2\\nmixins.button_primary(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>\\n  Returns primary Button's tokens, including all :states.\\n  <br><b style=\\\"color:red; font-size:10px; text-transform:uppercase\\\">reconsidering</b>\\n</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin button_secondary { ... }\\n```\\n```code|lang-js,span-2\\nmixins.button_secondary(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>\\n  Returns secondary Button's tokens, including all :states.\\n  <br><b style=\\\"color:red; font-size:10px; text-transform:uppercase\\\">reconsidering</b>\\n</div>\\n```\\n\\n\\n## <Action />\\n```code|lang-scss,span-2\\n@mixin action { ... }\\n```\\n```code|lang-js,span-2\\nmixins.action(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>\\n  Returns tokens that establish positioning & display properties.\\n  <br><b style=\\\"color:red; font-size:10px; text-transform:uppercase\\\">refactoring</b>\\n</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin action text { ... }\\n```\\n```code|lang-js,span-2\\nmixins.action(mixin, 'text');\\n```\\n```html|span-2,no-source,plain,light\\n<div>\\n  Poorly relates to Action. Used as text tokenizer.\\n  <br><b style=\\\"color:red; font-size:10px; text-transform:uppercase\\\">refactoring</b>\\n</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin action_link { ... }\\n```\\n```code|lang-js,span-2\\nmixins.action_link(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>\\n  Returns ActionLink's tokens. Refers to proceeding token for text styles.\\n  <br><b style=\\\"color:red; font-size:10px; text-transform:uppercase\\\">refactoring</b>\\n</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin action_button { ... }\\n```\\n```code|lang-js,span-2\\nmixins.action_button(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>\\n  Returns ActionButton's tokens. Refers to action text token for text styles.\\n  <br><b style=\\\"color:red; font-size:10px; text-transform:uppercase\\\">refactoring</b>\\n</div>\\n```\\n\\n\\n## <Flag />\\n```code|lang-scss,span-2\\n@mixin flag { ... }\\n```\\n```code|lang-js,span-2\\nmixins.flag(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns Flag version from bubble config including tokens & full structure.</div>\\n```\\n\\n\\n## <Tag />\\n```code|lang-scss,span-2\\n@mixin tag { ... }\\n```\\n```code|lang-js,span-2\\nmixins.tag(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns Tag version from bubble config including tokens & full structure.</div>\\n```\\n\\n```code|lang-scss,span-2\\n@mixin bubble tag{ ... }\\n```\\n```code|lang-js,span-2\\nmixins.bubble(mixin, 'tag');\\n```\\n```html|span-2,no-source,plain,light\\n<div>\\n  Returns tokens & structure for Flags and Tags.\\n  <br><b style=\\\"color:red; font-size:10px; text-transform:uppercase\\\">refactoring</b>\\n</div>\\n```\\n\\n\\n## <Wrapper />\\n```code|lang-scss,span-2\\n@mixin wrapper { ... }\\n```\\n```code|lang-js,span-2\\nmixins.wrapper(mixin);\\n```\\n```html|span-2,no-source,plain,light\\n<div>Returns tokens that establish positioning and display properties.</div>\\n```\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./catalog/pixel/style/tokens.md\n// module id = 824\n// module chunks = 4"],"sourceRoot":""}